package main

import (
	"log"
	"time"
	"fmt"

	"gopkg.in/telebot.v3"
)

func main() {
	// –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather
	botToken := "tockenBot"

	// –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: -1001234567890)
	groupID := int64(-GID)

	pref := telebot.Settings{
		Token:  botToken,
		Poller: &telebot.LongPoller{Timeout: 10 * time.Second},
	}

	bot, err := telebot.NewBot(pref)
	if err != nil {
		log.Fatal(err)
		return
	}

	// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏ –∫–Ω–æ–ø–∫–∞
	menu := &telebot.ReplyMarkup{}
	btnPost1 := menu.Data("–ü—Ä–∏–µ–º –¥–µ–∂—É—Ä—Å—Ç–≤–∞", "post_btn")
	btnPost2 := menu.Data("–°–¥–∞—á–∞ –¥–µ–∂—É—Ä—Å—Ç–≤–∞", "post_btn")
	menu.Inline(menu.Row(btnPost1, btnPost2))

	// –ö–æ–º–∞–Ω–¥–∞ /start
	bot.Handle("/start", func(c telebot.Context) error {
		return c.Send("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –≥—Ä—É–ø–ø—É:", menu)
	})

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–µ–º–∞ –¥–µ–∂—É—Ä—Å—Ç–≤–∞ 
	bot.Handle(&btnPost1, func(c telebot.Context) error {
		//–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
		user := c.Sender()
		
		// –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ HTML
		userLink := fmt.Sprintf(
			`<a href="tg://user?id=%d">%s</a>`,
			user.ID,
			user.FirstName,
		)
		
		msg := fmt.Sprintf("%s –¥–µ–∂—É—Ä—Å—Ç–≤–æ –≤ –°–û–£ –ò–¢–° —Å–¥–∞–ª. –ü—Ä–æ–≤–µ—Ä–∫–∏ –°–û–£ –ò–¢–° –ø–æ —á–µ–∫-–ª–∏—Å—Ç—É –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ, —á–µ–∫-–ª–∏—Å—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω", userLink)
		// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É
		_, err := bot.Send(&telebot.Chat{ID: groupID}, msg, telebot.ModeHTML,)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", err)
			return c.Send("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É üò¢")
		}
		return c.Send("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É ‚úÖ")
	})
		// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —Å–¥–∞—á–∏ –¥–µ–∂—É—Ä—Å—Ç–≤–∞
		bot.Handle(&btnPost2, func(c telebot.Context) error {
			//–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
			user := c.Sender()
			
			// –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ HTML
			userLink := fmt.Sprintf(
				`<a href="tg://user?id=%d">%s</a>`,
				user.ID,
				user.FirstName,
			)
			
			msg := fmt.Sprintf("%s –¥–µ–∂—É—Ä—Å—Ç–≤–æ –≤ –°–û–£ –ò–¢–° –ø—Ä–∏–Ω—è–ª. –ü—Ä–æ–≤–µ—Ä–∫–∏ –°–û–£ –ò–¢–° –ø–æ —á–µ–∫-–ª–∏—Å—Ç—É –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ, —á–µ–∫-–ª–∏—Å—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω", userLink)
			// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É
			_, err := bot.Send(&telebot.Chat{ID: groupID}, msg, telebot.ModeHTML,)
			if err != nil {
				log.Println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", err)
				return c.Send("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É üò¢")
			}
			return c.Send("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É ‚úÖ")
		})

	bot.Start()
}
